<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAB98xgAXfswAIH7MAF6JuQBgibkAFoHMAB+AywAbgs0ACYPSAAmE
        0gAdgdAAH4rSABaV2wAZktoAGZbbABac3gAemtwAIIDLACGCzgAphdAALobQACGK0gAkitIAJYzSACOL
        1AAljNQANI3RADmJ0AAimNsAI5vdACGd3gAmnNwAPJHSAD+S1AAfp+IAG6fkAA+y7QATuO8AFbjvABm4
        7wA8v+0AQpDRAEGS1ABFktYAR5TWAEmU1gBDltoAR5jaAESe2gBTm9oAVZraAFec2gBYm9oAQqPcAE2k
        2wBMptwAR6neAHGl2wBxp90ATrLiAFKz4wBQteQAWrTiAF+34wAaxfYAHsX1AA3R/wAQ0f8AHtD7AB7X
        /wAe2P8APcLvACDF9QAqy/YAIM/7ACXQ+wAg1f8AJdb/ACjW/wAv1/8AK9r/ACzY/wAx1v0ANdr/ADDc
        /wA/2/8AOt7/AFLF7QBXxu0AWsTtAFzH7QBTye8AVMnvAEHP9QBB2PsAQtv/AEnf/wBN3/8AXNb1AFDa
        +wBmxe0AYcjtAGTI7QB9yu0AdtLvAH3T7wB+3vUAROH/AEjg/wBP4P8AUeL/AFXi/wBT5f8AWeP/AFnl
        /wBd5P8AZ+L/AGHm/wBl5f8AaOP/AGnm/wBu5f8AZun/AGnp/wBt6P8AfOH2AHbi+wB35/sAcub/AHjn
        /gBx6v8Aden/AHHt/wB96v4Aeu7/AH3u/wCFtOQAgNDtAIHV7wCL5PcAjOX2AIHn/wCH5/8Ager+AITp
        /wCA7P8Ahuz/AInr+wCO7PsAie7/AI3u/gCR6v4AkO3+AJXt/gCY7f4AnO3/AIfz/wCJ8f8AjvH+AIv0
        /wCR8f8AlfH/AJX1/wCZ8f8AnvD/AJ32/wCZ+P8Aoe3/AKnu/gCt7v4AofD/AKXx/wCh9f8AqfH/AK7y
        /wCj+P8Arfz/ALHx/wC28v8Atvb/ALrx/gC89P8AxvP+AML0/wDG9P8AyPX/AM72/wDG+P8Az/n/AND2
        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
        //+M8v//i/T//4rx//+Q8P//j/L//4/y//+M8P//ifH//4v0//+N8v//kPL//4/y//+O8v//ivD//4ny
        //984fb/KILRywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFXvN8VKz4/6I8v//jfD//5Px
        //+T8P//k/H//5Dx//+K7///ju///5Px//+T8P//k/D//5Lx//+N7///ie///5Hx//+T8P//k/H//5Px
        //+K8P//h/P//1Kz4/4Ve83xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEyMGEnTD8FC1
        5P586v3/kfD//5bx//+W8f//lvH//5bx//+W8f//lvH//5bx//+W8f//lvH//5bx//+W8f//lvH//5bx
        //+V8P//iu///3fn+/9Hqd7+EnXD8AMTIwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACDx0DFXrK80yy4vx97v//kfD//5nx//+Y8f//mfH//5nx//+K8f//f+r+/4Dq/v+Q8v//m/L//5nx
        //+Y8f//mfH//4nu//967v//QKLc/BV4yvMCDx0DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIx
        Y0QVfMzwFnzL8BV8y/AVesnyHoHM/HHt//+A7P//oPH//5/x//+Q7f7/XMft/yB7zc4LS5SmC0uUpiB7
        zc5hyO3/lu7+/5/x//+g8f//cer//3Lt//8egs38FXrJ8hV8y/AWfMvwFXzM8AIxY0QAAAAAAAAAAAAA
        AAAAAAAAHXzM61LF7f9Vyu//U8nv/1PJ7/9c1vX/aun//5Du//+j8f//ovH//1fG7f8bds26BB46HgAA
        AAAAAAAABB46Hht2zbpkyO3/pfL//6Px//+D6///aOn//1zW9f9Tye//VMnv/1XK7/9Sxe3/HXzM6wAA
        AAAAAAAAAAAAAAAAAAAWgs3/Zun//23o//+X7///oPH//5/w//+h8P//p/H//6ry//+K7///HXvNzgQe
        Oh4AAAAAAAAAAAAAAAAAAAAABB46Hhx7zc6i9P//qfL//6Xx//+e8P//n/D//6Dx//+N7f//Y+b//2bq
        //8ljNL/AAAAAAAAAAAAAAAAAAAAABaCzf9g5///aub//6Lw//+u8v//rvL//67y//+u8v//r/L//3jn
        /v8LS5SmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkuUppPr/v+u8v//rvL//67y//+u8v//r/L//5Xt
        //9d5P//YOf//ySK0v8AAAAAAAAAAAAAAAAAAAAAFoLN/1nl//9l5f//qfD//7fz//+28///tvP//7Xz
        //+38///duL7/wtMlKYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKS5SmmOz+/7bz//+18///tvP//7bz
        //+38///mO7//1Xi//9Z5f//IYrS/wAAAAAAAAAAAAAAAAAAAAAWgs3/U+X//1nj//9+6v//huz//4Xr
        //+M7P//svL//730//+b8f//GXrNzgQeOh4AAAAAAAAAAAAAAAAAAAAABB46Hhp6zc629v//vPT//6jw
        //+E6v//hev//4bs//916f//UeL//1Pl//8fitL/AAAAAAAAAAAAAAAAAAAAABV9zPw8v+3/PsPv/z3D
        7/88wu//Qc/1/0nf//+U7P//x/X//8r2//9axO3/FnXNugQeOh4AAAAAAAAAAAQeOh4ads26fMrt/8j2
        ///I9f//buX//0jg//9Bz/X/PMLv/z3D7/8+w+//PL/t/xd7zOsAAAAAAAAAAAAAAAAAAAAAAjFjRBV8
        zPAVfMvwFXzL8BV6yfIZgc38ROH//3Lm///Q9v//zvb//7rx/v9mxe3/FXjNzgpLlKYJS5SmGHnNzn/K
        7f/G8/7/zvb//9H2//9P4P//ReH//x6BzeYVesnyFXzL8BV8y/AVfMzwAjFjRAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACDx0DFGvFmiSb3Pxo5v//xvT//9j4///Y+P//2Pj//9z5///G+P//qe3+/63u
        /v/P+f//2/n//9j4///Y+P//2fj//7vy//9Z4///JZvc/BRrxZoCDx0DAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAxMjBhBcr34jm93+UNr7/9D2///i+f//4fn//+P5///m+v//5Pn//+L5
        ///i+f//4vn//+L5///l+f//5vn//+L5///g+P//4vn//8L0//9B2Pv/Ipjb/hBcr34DEyMGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVcc2EIZ/f/jre//+w8P//8fz//+38///p+v//nO3//zfa
        //+B5///5fr//+38///u/P//yfX//2jj//8/2///yPX//+78///t/P//8fz//4To//8w3P//IZzd/hVx
        zYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABh+0csqy/b/LNj//0Lb///c+P////7//6Ht
        //802v//LNr//yTX///a9///+P3///r9//+Q6f//J9f//yva//9N3///0fb///v+//+q7///L9f//yzY
        //8qy/b/GH7RywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1GaXRiF0vAl0Pv/JNb//z/b
        //+E6P//HtD7/xyZ3PwVgM38HsX1/9/5/////////////5Pq//8gxfX/FX/M/B2m4vwx1v3/h+f//yjW
        //8l1v//JdD7/xiF0vAPUZpdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBw4HD1CabBmS
        2v8gz/v/INX//x7Y//8Zltv+FGvFmhR6yfIYuO//4Pn/////////////kOr//xq57/8UesnyFW7Hmhun
        5P4e1///INX//yDP+/8Zktr/D1CabAEHDgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAD1GabBaE0vAaxvf/FpXb/hFcr34CDx0DFHzL8BS47/+d7f//tfD//7fx//9n4v//Frnv/xR8
        y/ACDx0DEVyufhac3v4axfb/FoTS8A9RmmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABBw4HD1GaXRR80csVcMyEAxMjBgAAAAAUfMvwE7jv/xDR//8P0P//D9D//xHR
        //8TuO//FHzL8AAAAAADEyMGFXDMhBR80csPUZpdAQcOBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABR8zPAPsu3/DNL//wzR
        //8M0f//DNL//w+y7f8UfMzwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjFjRAp3
        zOsJhNL/CYPS/wmD0v8JhNL/CnfM6wIxY0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////////8A////AP//wQCD/8AAA/8AAAD/AA
        AA/wAAAP8AAAD/AAAA/4AAAfwAAAA8ABgAPAA8ADwAfgA8AH4APAA8ADwAGAA8AAAAP4AAAf8AAAD/AA
        AA/wAAAP8AAAD/AAAA/8AAA//BAIP//wD///8A////////////8=
</value>
  </data>
</root>